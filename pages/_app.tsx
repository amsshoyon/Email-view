import { NextPage } from 'next'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { AppProps } from 'next/app'
import { ThemeProvider } from '@emotion/react'
import { CssBaseline } from '@mui/material'
import { ToastContainer } from 'material-react-toastify';
import { Theme } from 'helpers/theme'
import { observer } from 'mobx-react'
import AuthStore from '@stores/AuthStore'
import { useRouter } from 'next/router'
import Layout from '@components/Layout/Layout'
import '../styles/globals.scss'
import 'material-react-toastify/dist/ReactToastify.css';

export type NextApplicationPage<P = any, IP = P> = NextPage<P, IP> & {
	protected?: boolean
}

function MyApp(props: AppProps) {
	const { Component, pageProps }: { Component: any; pageProps: any } = props;
	const router = useRouter();
	const [showUi, setShowUi] = useState(Component.protected ? false : true);
	
	useEffect(() => {
		if (Component.protected && AuthStore.isLoggedIn) setShowUi(true);
		else if(Component.protected && !AuthStore.isLoggedIn) {
			router.push('/auth/login');
			setTimeout(() => setShowUi(true), 1000);
		}
	}, [Component.protected, router])
	
	useEffect(() => {
		if(AuthStore.redirectToPath) router.push('/auth/login');
	// eslint-disable-next-line react-hooks/exhaustive-deps
	}, [AuthStore.redirectToPath])
	
	return (
		<ThemeProvider theme={Theme}>
			<ToastContainer />
			<Head>
				<title>Email Automation</title>
				<meta name="description" content="Generated by create next app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<CssBaseline />
			<Layout show={showUi}>
				<Component {...pageProps} />
			</Layout>
		</ThemeProvider>
	)
}

export default observer(MyApp)
